{"version":3,"sources":["lineplot.js"],"names":["createPlotlyDataMeanWithSem","x","mean","sem","line_color","ci_color","name","bottom_values","map","v","i","top_values","mode","line","main_trace","undefined","showlegend","fill","bottom_trace","width","top_trace","fillcolor","createGeneralSentimentEvolutionPlot","id","data","traces","Plotly","newPlot","layout","title","type","tickformat","yaxis","tickmode","ticktext","tickvals","responsive","d3","json","then"],"mappings":"aAAA,SAASA,4BAA4BC,EAAGC,EAAMC,EAAKC,EAAYC,EAAUC,GACrE,IAAMC,EAAgBL,EAAKM,IAAI,SAACC,EAAGC,GAAJ,OAAUD,EAAIN,EAAIO,KAD5CV,EAAAA,EAAAA,IAAAA,SAAAA,EAATU,GAASV,OAA+BE,EAAMC,EAA9CO,KA+Bc,MANQ,CAxBa,CAA/BT,EAAAA,EACMU,EAAAA,EAAsBC,KAAW,QAAvCC,KAAA,CAEMC,MAAaV,GAEZF,WAFYa,MAAAT,EAGXA,KAHWS,MAGTT,EAHSA,EAAA,IAKJF,CALIH,EAAAA,EAOfe,EAAAA,EACIJ,KAAM,QARdK,KAAA,OAUMC,KAAAA,CAAeC,MAAA,GAGbH,YAHa,EAIbV,KAAE,IAEK,CANML,EAAAA,EAQjBe,EAAAA,EACIJ,KAAE,QATVK,KAAA,UAWMG,UAAYf,EAAAQ,KAAA,CAEXF,MAFW,GAIVK,YAJU,EAKdK,KAAS,KAWhB,SAAAC,oCAAAC,EAAAC,GAuBSC,EAASzB,4BApBLwB,EAAI,MADTF,EAAAA,KACUE,EAAA,IAoB0C,QAAS,yBAAqBT,GAS1FW,OAAAC,QAAA,QAAAF,EA3BoB,CAEXG,MAAS,QACXC,MAAO,CACAC,KAAA,OACGC,WADH,SAEHA,MAAY,QAJLC,MAAA,CAOJC,SAAA,QACHA,SAAU,CADP,gBAAA,cAAA,gBAEHC,SAAW,EAAA,EAAA,EAAA,GACXC,MAAU,EAAK,EAAG,GACbN,MAAE,8BAQX,CAEAO,YAAY,IAOhBC,EAAAA,WAA0DA,GAAAC,KACtDhB,yCAAoCiB,KAASf,SAAAA,GADS,OAA1DF,oCAAA,QAAAE","file":"lineplot.js","sourcesContent":["function createPlotlyDataMeanWithSem(x, mean, sem, line_color, ci_color, name) {\n    const bottom_values = mean.map((v, i) => v - sem[i]);\n    const top_values = mean.map((v, i) => v + sem[i]);\n\n    const main_trace = {\n        x: x,\n        y: mean,\n        mode: 'lines',\n        line: {\n            color: line_color,\n        },\n        showlegend: name != undefined,\n        name: name != undefined ? name : '',\n    };\n    const bottom_trace = {\n        x: x,\n        y: bottom_values,\n        mode: 'lines',\n        fill: 'none',\n        line: {\n            width: 0\n        },\n        showlegend: false,\n        name: ''\n    };\n    const top_trace = {\n        x: x,\n        y: top_values,\n        mode: 'lines',\n        fill: 'tonexty',\n        fillcolor: ci_color,\n        line: {\n            width: 0\n        },\n        showlegend: false,\n        name: '',\n    };\n\n    return [\n        main_trace, bottom_trace, top_trace\n    ]\n}\n\nfunction createGeneralSentimentEvolutionPlot(id, data) {\n    const x = data['dates'];\n    const mean = data['mean'];\n    const sem = data['sem'];\n\n    const layout = {\n        title: 'Title',\n        xaxis: {\n            type: 'date',\n            tickformat: '%B, %Y',\n            title: 'Date'\n        },\n        yaxis: {\n            tickmode: \"array\",\n            ticktext: [\"Negative (-1)\", \"Neutral (0)\", \"Positive (1)\"],\n            tickvals: [-1, 0, 1],\n            range: [-1, 1],\n            title: 'Sentiment (numeric value)'\n        }\n    };\n\n    const traces = createPlotlyDataMeanWithSem(x, mean, sem, 'black', 'rgba(0, 0, 0, .1)', undefined);\n\n    const config = {\n        // displayModeBar: false, // hide bar\n        // staticPlot: true, // disable moving and zooming\n        responsive: true, // make plot resize with screen\n    };\n\n    Plotly.newPlot('myDiv', traces, layout, config);\n}\n\n$(() => {\n    d3.json('data/general-sentiment-over-time.json').then(data =>\n        createGeneralSentimentEvolutionPlot('myDiv', data));\n});"]}